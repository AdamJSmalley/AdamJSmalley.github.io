/* $size: 26vmin; //22

$offset: $size * 0.5; */

:root {
  --size: 26vmin;
  --offset: calc(var(--size) * 0.5); 
}

@media (orientation: portrait) {
  :root {
    --size: 42vmin !important;
  }
}

@mixin box {
  width: var(--size);
  height: var(--size)
}

#intro {

  .cube-container {
    display: flex;
    justify-content: center;
    align-items: center;


    .cube {
      @include box;
      position: relative;
      transform-style: preserve-3d;
      border: none;
      transform: rotateZ(0deg) rotateX(-10deg);

      .cube-face {
        @include box;
        position: absolute;
        text-align: center;
        //padding: 100px 0px;
        border: 3px solid white;
        font-size: calc(var(--size) * 0.13);
        line-height: caLC(var(--size) * 0.15);
        //box-sizing: border-box;
        background-color: rgb(0, 0, 0);
        //background-size: contain;
        //grid-area: inner-div;
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        align-items: center;
      }

      i {
        font-size: calc(var(--size) * 0.45);
      }

      #front {
        transform: translateZ(var(--offset));
        //color: red;
      }

      #back {
        transform: translateZ(calc(var(--offset) * -1)) rotateY(180deg);
        //color: blue;
      }

      #left {
        right: var(--offset);
        transform: rotateY(-90deg);
        //color: green;
      }

      #right {
        left: var(--offset);
        transform: rotateY(90deg);
      }

      #top {
        bottom: var(--offset);
        transform: rotateX(90deg);
      }

      #bottom {
        top: var(--offset);
        transform: rotateX(-90deg);
        justify-content: center;
      }
    }
  }
}